# Generated by Django 4.0.6 on 2022-07-20 06:23

import client.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cellphone', models.CharField(max_length=15, unique=True)),
                ('organization_name', models.CharField(max_length=15)),
                ('educational_interface_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('dateofestablishment', models.DateField(null=True)),
                ('extra', models.JSONField(default=dict)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Imagetag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('forceupdate', models.BooleanField(default=False)),
                ('pwa_version', models.CharField(max_length=20)),
                ('pwa_description', models.CharField(max_length=200)),
                ('admin_version', models.CharField(max_length=20)),
                ('admin_description', models.CharField(max_length=200)),
                ('site_version', models.CharField(max_length=20)),
                ('site_description', models.CharField(max_length=200)),
                ('android_version', models.CharField(max_length=20)),
                ('android_description', models.CharField(max_length=200)),
                ('ios_version', models.CharField(max_length=20)),
                ('ios_description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('code', models.IntegerField()),
                ('trying', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_user', models.BooleanField(default=False)),
                ('site_created', models.BooleanField(default=False)),
                ('duration', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_color', models.CharField(max_length=50)),
                ('sub_color', models.CharField(max_length=50)),
                ('app_name', models.CharField(max_length=250)),
                ('domain', models.CharField(max_length=50)),
                ('kuberid', models.CharField(blank=True, max_length=250, null=True)),
                ('site_name', models.CharField(blank=True, max_length=250, null=True)),
                ('admin_name', models.CharField(blank=True, max_length=250, null=True)),
                ('pwa_name', models.CharField(blank=True, max_length=250, null=True)),
                ('fullname', models.CharField(blank=True, max_length=250, null=True)),
                ('contact_phone', models.CharField(max_length=250)),
                ('download_link', models.CharField(max_length=500)),
                ('company_logo', models.ImageField(upload_to=client.models.user_image)),
                ('splashscreen', models.ImageField(upload_to=client.models.user_image)),
                ('instagram', models.CharField(blank=True, max_length=50, null=True)),
                ('aparat', models.CharField(blank=True, max_length=50, null=True)),
                ('facebook', models.CharField(blank=True, max_length=50, null=True)),
                ('twitter', models.CharField(blank=True, max_length=70, null=True)),
                ('youtube', models.CharField(blank=True, max_length=70, null=True)),
                ('favicon', models.ImageField(upload_to=client.models.user_image)),
                ('short_title', models.CharField(blank=True, max_length=50, null=True)),
                ('slogan', models.CharField(blank=True, max_length=50, null=True)),
                ('zarinpal', models.CharField(blank=True, max_length=50, null=True)),
                ('smsir_key', models.CharField(blank=True, max_length=50, null=True)),
                ('image_tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='client.imagetag')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordGenerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.setting')),
            ],
        ),
    ]
